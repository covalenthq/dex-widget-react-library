{"version":3,"file":"main.535a048f822403c92d7d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;AACA;;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AACA;;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAjBA;AATA;AADA;AAXA;AADA;AADA;AAiDA","sources":["webpack://@Calm-Rock/dex-widget-react-library/./src/components/LiqTTpools24h/LiqTTpools24h.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const LiqTTpools24h = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=${API_KEY}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n  \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n    console.log(itemArr)\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].liquidity_timeseries_7d;\n      //console.log(sampleArr)\n      var sevenDayArr = [];\n      var liquidityQuoteArr = [];\n      for (let j = 0; j < sampleArr.length; j++) {\n        //const lq = (typeof(sampleArr[j].liquidity_quote) !=='undefined') ? sampleArr[j].liquidity_quote : NaN\n        const lq =  sampleArr[j].liquidity_quote\n        liquidityQuoteArr.push({ liquidityQuote: lq });\n        //console.log(typeof(sampleArr[j].liquidity_quote))\n      }\n      for (let k=0; k< 8-sampleArr.length; k++) {\n        const rlq = NaN\n        liquidityQuoteArr.push({ liquidityQuote: rlq });\n      }\n      \n      sevenDayArr.push(liquidityQuoteArr);\n      //console.log(sevenDayArr)\n      console.log(sevenDayArr[0][7])\n      const vpc = (Math.round(((sevenDayArr[0][7].liquidityQuote - sevenDayArr[0][6].liquidityQuote) * 100 / (sevenDayArr[0][6].liquidityQuote)+ Number.EPSILON)*100)/100)\n      console.log(vpc)\n      finalArr.push({ \n        liquidityQuote: itemArr[i][0].total_liquidity_quote, \n        tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", \n        liquidityQuoteTS: sevenDayArr, \n        liquidityPercentChange : (vpc === NaN ? 'NA' : vpc)\n       });\n      \n    }\n    setFinalData(finalArr);\n    }\nconsole.log(finalData)\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='400' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.liquidityPercentChange}%                  \n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex> \n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n"],"names":[],"sourceRoot":""}