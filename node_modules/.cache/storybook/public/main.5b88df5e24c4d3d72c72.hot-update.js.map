{"version":3,"file":"main.5b88df5e24c4d3d72c72.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;;;AAKA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAIA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AAdA;AAiBA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAAA;AANA;AAeA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAlBA;AA3BA;AADA;AAXA;AADA;AADA;AADA;AAuEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;;;;;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;AADA;AAeA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;AADA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AADA;AAkBA;AACA;AACA;AACA;AACA;AALA;AAlDA;AA4DA;AACA;AAGA;AAEA;AACA;AAAA;AAEA;AACA;AAvEA;AA6EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AAEA;AACA;AALA;AADA","sources":["webpack://cheetoda-widget-react-library/./src/stories/styles.css","webpack://cheetoda-widget-react-library/./src/stories/styles.css?7edb","webpack://cheetoda-widget-react-library/./src/stories/Requirements.stories.js","webpack://cheetoda-widget-react-library/./src/components/Checkmark/Checkmark.js","webpack://cheetoda-widget-react-library/./src/components/Requirement/Requirement.js","webpack://cheetoda-widget-react-library/./src/config.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".form {\\n    width: 500px;\\n    padding: 25px;\\n    border-radius: 5px;\\n    padding-bottom: 50px;\\n    box-shadow: 0px 0px 5px gray;\\n  }\\n  .form input {\\n    width: 100%;\\n    border: none;\\n    padding: 8px;\\n    outline: none;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    box-shadow: 0px 0px 3px gray;\\n  }\\n  .form button {\\n    width: 100%;\\n    padding: 8px;\\n    border: none;\\n    outline: none;\\n    color: white;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    background-color: rgb(65, 65, 201);\\n  }\\n  .form button:disabled {\\n    cursor: not-allowed;\\n    background-color: lightgray;\\n  }\\n  .form h1 {\\n    font-family: sans-serif;\\n  }\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/stories/styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,oBAAoB;IACpB,4BAA4B;EAC9B;EACA;IACE,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,kBAAkB;IAClB,sBAAsB;IACtB,4BAA4B;EAC9B;EACA;IACE,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,sBAAsB;IACtB,kCAAkC;EACpC;EACA;IACE,mBAAmB;IACnB,2BAA2B;EAC7B;EACA;IACE,uBAAuB;EACzB\",\"sourcesContent\":[\".form {\\n    width: 500px;\\n    padding: 25px;\\n    border-radius: 5px;\\n    padding-bottom: 50px;\\n    box-shadow: 0px 0px 5px gray;\\n  }\\n  .form input {\\n    width: 100%;\\n    border: none;\\n    padding: 8px;\\n    outline: none;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    box-shadow: 0px 0px 3px gray;\\n  }\\n  .form button {\\n    width: 100%;\\n    padding: 8px;\\n    border: none;\\n    outline: none;\\n    color: white;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    background-color: rgb(65, 65, 201);\\n  }\\n  .form button:disabled {\\n    cursor: not-allowed;\\n    background-color: lightgray;\\n  }\\n  .form h1 {\\n    font-family: sans-serif;\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport './styles.css';\\nimport { Requirement } from '../components/Requirement';\\nimport { Checkmark } from '../components/Checkmark/Checkmark';\\n\\nconst stories = storiesOf('App Test', module);\\n\\nstories.add('App', () => {\\n\\nreturn (\\n<> \\n<Requirement /> \\n\\n</>\\n);\\n});\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"app\":{\"startLoc\":{\"col\":12,\"line\":9},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":19,\"line\":9},\"endBody\":{\"col\":1,\"line\":17}}};\n    \nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport './styles.css';\nimport { Requirement } from '../components/Requirement';\nimport { Checkmark } from '../components/Checkmark/Checkmark';\n\nconst stories = storiesOf('App Test', module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } });\n\nstories.add('App', () => {\n\nreturn (\n<> \n<Requirement /> \n\n</>\n);\n});","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Box, Flex, useColorModeValue, Square } from \"@chakra-ui/react\";\nimport Ticker from \"react-ticker\";\nimport { CONFIG } from \"../../config\";\n\n\n\n\nexport const Checkmark = () => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(\"black\", \"#a7a7ac\");\n  const TextColorMode = useColorModeValue(\"#a7a7ac\", \"brand.300\");\n  const BoxTextColor = useColorModeValue(\"red\", \"green\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(\"#0c141c\", \"#243036\");\n  let blockchain_id = CONFIG.TEMPLATE.block_chain_id\n  let dex_name = CONFIG.TEMPLATE.dex_name\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=ckey_4e73d56514984838ab3206fbaf4&sort-by=volume`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  \n\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].volume_timeseries_7d;\n      var sevenDayArr = [];\n      var volumePrecentArray = [];\n      var volumeQuoteArr = [];\n      for (let j = 0; j < sampleArr.length; j++) {\n        volumeQuoteArr.push({ volumeQuote: sampleArr[j].volume_quote });\n      }\n      sevenDayArr.push(volumeQuoteArr);\n\n      finalArr.push({ volume24hQuote: itemArr[i][0].volume_24h_quote, tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", volumeQuoteTS: sevenDayArr, volumePercentChange : Math.round(((sevenDayArr[0][7].volumeQuote - sevenDayArr[0][6].volumeQuote) * 100 / (sevenDayArr[0][6].volumeQuote)+ Number.EPSILON)*100)/100 });\n      \n    }\n    setFinalData(finalArr);\n    }\n\n\n\nconsole.log(finalData);\n\nreturn (\n    <>\n    <Ticker offset=\"run-in\" speed={10}>\n      {({}) => (\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"250px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={3}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            borderColor=\"red.400\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText}>\n                  {i.tickerPair}\n                </Text>\n                <Text\n                  color={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                > \n                  {i.volumePercentChange}%\n                </Text>\n                <Square bg='#cacacd' size='0.1px' height='30px' >\n                </Square>\n              </Flex>\n              <Flex>\n              <Text\n                  fontSize=\"sm\"\n                  mt={2}\n                  color={TextColorMode}\n                  height='50px'\n                >\n                  <Text\n                  fontSize=\"10px\"\n                  textAlign=\"center\"\n                  color='#84848c'\n                  > \n                  Volume Quote \n                  </Text> \n                 ${i.volume24hQuote}\n                  </Text>\n              <Box alignItems=\"center\" size = '50px' w=\"250px\">\n              </Box>\n              <Square bg='#cacacd' size='0.1px' height='60px' >\n              </Square>\n              </Flex> \n            </Box>\n            \n            ))}\n        </Flex>\n      )}\n    </Ticker>\n    </>\n  );\n};\n\n","import React, { useState } from \"react\";\nimport { Box, Flex, useColorModeValue, Select, Image, Spacer } from \"@chakra-ui/react\";\nimport { Checkmark } from \"../Checkmark/Checkmark\";\n\n\n//API Key\nconst API_KEY = \"ckey_4e73d56514984838ab3206fbaf4\";\nconst LOGO_URL = \"https://media-exp1.licdn.com/dms/image/C560BAQHZftuIJc5OMQ/company-logo_200_200/0/1616601285421?e=2147483647&v=beta&t=j6DJiJFHvVEFGFKU6rki6dFXYO4m3c43X0jKwe6H7_A\"\n\nexport const Requirement = () => {\n    const [items, setItems] = useState([]);\n    const chainNameText = useColorModeValue(\"black\", \"gray.500\");\n    const TextColorMode = useColorModeValue(\"brand.200\", \"brand.300\");\n    const BoxTextColor = useColorModeValue(\"red\", \"green\");\n    const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n    const BoxBgColor = useColorModeValue(\"#0c141c\", \"#243036\");\n    const [volumeLiquidity, setVolumeLiquidity] = useState('vol');\n    const [tradingCategory, setTradingCategory] = useState('ttpools');\n    const [timeFrame, setTimeFrame] = useState('24h');\n\n\n\n        return (\n            <>                  \n          <Flex\n                bg={BoxBgColor}\n                w=\"full\"\n                borderColor={borderColor}\n          >\n              <Box >\n                  <Select\n                      placeholder=\"Select an option\"\n                      size='xs'\n                      variant='filled'\n                      value={volumeLiquidity}\n                      width='100px'\n                      onChange={(e) => setVolumeLiquidity(e.target.value)}\n                      bgColor={BoxBgColor}\n                      >\n                      <option value=\"vol\">Volume</option>\n                      <option value=\"liquidity\">Liquidity</option>\n                      \n                  </Select>\n              </Box>\n              <Box >\n                  <Select\n                      placeholder=\"Select an option\"\n                      size='xs'\n                      variant='filled'\n                      value={tradingCategory}\n                      onChange={(e) => setTradingCategory(e.target.value)}\n                      bgColor={BoxBgColor}\n                      >\n                      <option value=\"ttpools\">Top trading pools</option>\n                      <option value=\"ttpairs\">Top trading pairs</option>\n                  </Select>\n              </Box>\n              <Box >\n                  <Select\n                      placeholder=\"Select an option\"\n                      size='xs'\n                      variant='filled'\n                      value={timeFrame}\n                      width='70px'\n                      onChange={(e) => setTimeFrame(e.target.value)}\n                      bgColor={BoxBgColor}\n                      >\n                      <option value=\"24h\">24h</option>\n                      <option value=\"7d\">7d</option>\n                      <option value=\"30d\">30d</option>\n                  </Select>\n              </Box>\n              <Spacer />\n              Powered by \n              <Image\n              borderRadius='full'\n              boxSize='30px'\n              objectFit='cover'\n              src='https://media-exp1.licdn.com/dms/image/C560BAQHZftuIJc5OMQ/company-logo_200_200/0/1616601285421?e=2147483647&v=beta&t=j6DJiJFHvVEFGFKU6rki6dFXYO4m3c43X0jKwe6H7_A'\n              alt='Dan Abramov'\n              />\n          </Flex>            \n          {\n                (() => {\n                    if(volumeLiquidity==='vol' && tradingCategory==='ttpools' && timeFrame==='24h') {\n                            return (\n                                <Checkmark />\n                            )\n                    }\n                            else {\n                            return (\n                                <p>Work in progress!</p>\n                            )\n                        }\n                })()  \n            } \n\n          </>\n        );\n\n    }    \n\n  \n\n\n\n\n","export const CONFIG = {\n    TEMPLATE: {\n      // 1. Set your NFT collection contract address\n      \"dex_name\": \"spiritswap\",\n  \n      // 2. Set your blockchain chain ID where your NFT collection contract address is deployed (see below for value options)\n      \"block_chain_id\": \"250\",\n    }\n}"],"names":[],"sourceRoot":""}