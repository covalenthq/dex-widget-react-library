{"version":3,"file":"main.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAFA;;;;;;;;;;;;;;ACAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAhEA;AAkEA;;;;;;;;;;;;AC/EA;;AAEA;AAEA;;;AACA;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAjBA;AATA;AADA;AAXA;AADA;AADA;AAiDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AApBA;AATA;AADA;AAXA;AADA;AADA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AApBA;AATA;AADA;AAXA;AADA;AADA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAjBA;AATA;AADA;AAXA;AADA;AADA;AAiDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AApBA;AATA;AADA;AAXA;AADA;AADA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AApBA;AATA;AADA;AAXA;AADA;AADA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAjBA;AATA;AADA;AAXA;AADA;AADA;AAiDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AApBA;AATA;AADA;AAXA;AADA;AADA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AApBA;AATA;AADA;AAXA;AADA;AADA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAGA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAhBA;AATA;AADA;AAXA;AADA;AADA;AAiDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAnBA;AATA;AADA;AAXA;AADA;AADA;AAmDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAnBA;AATA;AADA;AAXA;AADA;AADA;AAmDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AADA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;AADA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AADA;AAiBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAtDA;AAmlMA;AAwMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACRA","sources":["webpack://@Calm-Rock/dex-widget/./src/stories/styles.css","webpack://@Calm-Rock/dex-widget/./src/stories/styles.css?7edb","webpack://@Calm-Rock/dex-widget/./.storybook/preview.js","webpack://@Calm-Rock/dex-widget/./.storybook/preview.js-generated-config-entry.js","webpack://@Calm-Rock/dex-widget/./generated-stories-entry.js","webpack://@Calm-Rock/dex-widget/./src/stories/Requirements.stories.js","webpack://@Calm-Rock/dex-widget/./src/components/LiqTTpairs24h/LiqTTpairs24h.js","webpack://@Calm-Rock/dex-widget/./src/components/LiqTTpairs30d/LiqTTpairs30d.js","webpack://@Calm-Rock/dex-widget/./src/components/LiqTTpairs7d/LiqTTpairs7d.js","webpack://@Calm-Rock/dex-widget/./src/components/LiqTTpools24h/LiqTTpools24h.js","webpack://@Calm-Rock/dex-widget/./src/components/LiqTTpools30d/LiqTTpools30d.js","webpack://@Calm-Rock/dex-widget/./src/components/LiqTTpools7d/LiqTTpools7d.js","webpack://@Calm-Rock/dex-widget/./src/components/VolTTpairs24h/VolTTpairs24h.js","webpack://@Calm-Rock/dex-widget/./src/components/VolTTpairs30d/VolTTpairs30d.js","webpack://@Calm-Rock/dex-widget/./src/components/VolTTpairs7d/VolTTpairs7d.js","webpack://@Calm-Rock/dex-widget/./src/components/VolTTpools24h/VolTTpools24h.js","webpack://@Calm-Rock/dex-widget/./src/components/VolTTpools30d/VolTTpools30d.js","webpack://@Calm-Rock/dex-widget/./src/components/VolTTpools7d/VolTTpools7d.js","webpack://@Calm-Rock/dex-widget/./src/components/Widget/Widget.js","webpack://@Calm-Rock/dex-widget/./src/ sync ^\\.(?a679","webpack://@Calm-Rock/dex-widget/./src/ sync ^\\.(","webpack://@Calm-Rock/dex-widget/ignored|/Users/cheeto/Desktop/test-folder/dex-widget-react-library/node_modules/object-inspect|./util.inspect"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".form {\\n    width: 500px;\\n    padding: 25px;\\n    border-radius: 5px;\\n    padding-bottom: 50px;\\n    box-shadow: 0px 0px 5px gray;\\n  }\\n  .form input {\\n    width: 100%;\\n    border: none;\\n    padding: 8px;\\n    outline: none;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    box-shadow: 0px 0px 3px gray;\\n  }\\n  .form button {\\n    width: 100%;\\n    padding: 8px;\\n    border: none;\\n    outline: none;\\n    color: white;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    background-color: rgb(65, 65, 201);\\n  }\\n  .form button:disabled {\\n    cursor: not-allowed;\\n    background-color: lightgray;\\n  }\\n  .form h1 {\\n    font-family: sans-serif;\\n  }\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/stories/styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,oBAAoB;IACpB,4BAA4B;EAC9B;EACA;IACE,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,kBAAkB;IAClB,sBAAsB;IACtB,4BAA4B;EAC9B;EACA;IACE,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,sBAAsB;IACtB,kCAAkC;EACpC;EACA;IACE,mBAAmB;IACnB,2BAA2B;EAC7B;EACA;IACE,uBAAuB;EACzB\",\"sourcesContent\":[\".form {\\n    width: 500px;\\n    padding: 25px;\\n    border-radius: 5px;\\n    padding-bottom: 50px;\\n    box-shadow: 0px 0px 5px gray;\\n  }\\n  .form input {\\n    width: 100%;\\n    border: none;\\n    padding: 8px;\\n    outline: none;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    box-shadow: 0px 0px 3px gray;\\n  }\\n  .form button {\\n    width: 100%;\\n    padding: 8px;\\n    border: none;\\n    outline: none;\\n    color: white;\\n    margin-top: 25px;\\n    border-radius: 5px;\\n    box-sizing: border-box;\\n    background-color: rgb(65, 65, 201);\\n  }\\n  .form button:disabled {\\n    cursor: not-allowed;\\n    background-color: lightgray;\\n  }\\n  .form h1 {\\n    font-family: sans-serif;\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","export const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n}","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/Users/cheeto/Desktop/test-folder/dex-widget-react-library/node_modules/@storybook/client-api';\nimport { logger } from '/Users/cheeto/Desktop/test-folder/dex-widget-react-library/node_modules/@storybook/client-logger';\nimport * as config from '/Users/cheeto/Desktop/test-folder/dex-widget-react-library/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n    case 'argTypes':\n      {\n        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/react\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./src', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./src', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { storiesOf } from '@storybook/react';\\nimport './styles.css';\\nimport { Widget } from '../components/Widget';\\n\\nconst stories = storiesOf('App Test', module);\\n\\nstories.add('App', () => {\\n\\nreturn (\\n<> \\n<Widget \\nchain_id='250'\\ndex_name='spiritswap'\\napi_key='ckey_4e73d56514984838ab3206fbaf4'\\nbg_color='#FFFFFF'\\ntext_color='yellow'\\n/> \\n\\n\\n</>)\\n});\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"app\":{\"startLoc\":{\"col\":12,\"line\":7},\"endLoc\":{\"col\":1,\"line\":21},\"startBody\":{\"col\":19,\"line\":7},\"endBody\":{\"col\":1,\"line\":21}}};\n    \nimport { storiesOf } from '@storybook/react';\nimport './styles.css';\nimport { Widget } from '../components/Widget';\n\nconst stories = storiesOf('App Test', module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } });\n\nstories.add('App', () => {\n\nreturn (\n<> \n<Widget \nchain_id='250'\ndex_name='spiritswap'\napi_key='ckey_4e73d56514984838ab3206fbaf4'\nbg_color='#FFFFFF'\ntext_color='yellow'\n/> \n\n\n</>)\n});","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes} from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const LiqTTpairs24h = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/tokens/widget/?key=${API_KEY}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      console.log(itemArr[i])\n      var sampleArr = itemArr[i].total_liquidity_timeseries_7d;\n      console.log(sampleArr)\n      var sevenDayArr = [];\n      var volumePrecentArray = [];\n      var liquidityQuoteArr = [];\n      for (let j = 0; j < sampleArr.length; j++) {\n        liquidityQuoteArr.push({ liquidityQuote: sampleArr[j].total_liquidity_24h_quote });\n      }\n      sevenDayArr.push(liquidityQuoteArr);\n\n      finalArr.push({liquidity24hQuote: itemArr[i].total_liquidity_quote, tickerPair : itemArr[i].contract_ticker_symbol, liquidityQuoteTS: sevenDayArr, liquidityPercentChange : Math.round(((sevenDayArr[0][7].liquidityQuote - sevenDayArr[0][6].liquidityQuote) * 100 / (sevenDayArr[0][6].liquidityQuote)+ Number.EPSILON)*100)/100 });\n      \n    }\n    setFinalData(finalArr);\n    }\n\n\n\nconsole.log(finalData);\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.liquidityPercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex>\n            </Box>\n            ))}\n        </Flex>\n    </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes} from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const LiqTTpairs30d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/tokens/widget/?key=${API_KEY}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      //console.log(itemArr[i])\n      var sampleArr = itemArr[i].total_liquidity_timeseries_30d;\n      //console.log(sampleArr)\n      var sevenDayArr = [];\n      var liquidityQuoteArr = [];\n      for (let j = 0; j < sampleArr.length; j++) {\n        liquidityQuoteArr.push({ liquidityQuote: sampleArr[j].total_liquidity_24h_quote });\n      }\n      sevenDayArr.push(liquidityQuoteArr);\n      finalArr.push({liquidity24hQuote: itemArr[i].total_liquidity_quote, tickerPair : itemArr[i].contract_ticker_symbol, liquidityQuoteTS: sevenDayArr, liquidityPercentChange : Math.round(((sevenDayArr[0][29].liquidityQuote - sevenDayArr[0][0].liquidityQuote) * 100 / (sevenDayArr[0][0].liquidityQuote)+ Number.EPSILON)*100)/100 });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.liquidityPercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                    <LineChart width={50} height={50} data={i.liquidityQuoteTS[0]}>\n                        <Line type=\"monotone\" dataKey=\"liquidityQuote\" stroke={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                    </LineChart>\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex>\n            </Box>\n            ))}\n        </Flex>\n     </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const LiqTTpairs7d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n  \n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/tokens/widget/?key=${API_KEY}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i].total_liquidity_timeseries_7d;\n      var sevenDayArr = [];\n      var liquidityQuoteArr = [];\n      for (let j = 0; j < sampleArr.length; j++) {\n        liquidityQuoteArr.push({ liquidityQuote: sampleArr[j].total_liquidity_24h_quote });\n      }\n      sevenDayArr.push(liquidityQuoteArr);\n      finalArr.push({liquidity24hQuote: itemArr[i].total_liquidity_quote, tickerPair : itemArr[i].contract_ticker_symbol, liquidityQuoteTS: sevenDayArr, liquidityPercentChange : Math.round(((sevenDayArr[0][7].liquidityQuote - sevenDayArr[0][0].liquidityQuote) * 100 / (sevenDayArr[0][0].liquidityQuote)+ Number.EPSILON)*100)/100 });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.liquidityPercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                    <LineChart width={50} height={50} data={i.liquidityQuoteTS[0]}>\n                        <Line type=\"monotone\" dataKey=\"liquidityQuote\" stroke={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                    </LineChart>\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex>\n            </Box>\n            ))}\n        </Flex>\n    </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const LiqTTpools24h = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=${API_KEY}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n  \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n    //console.log(itemArr)\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].liquidity_timeseries_7d;\n      //console.log(sampleArr)\n      var sevenDayArr = [];\n      var liquidityQuoteArr = [];\n      for (let j = 0; j < 8; j++) {\n        console.log(sampleArr[j])\n        const lq = sampleArr[j] ? sampleArr[j].liquidity_quote : NaN \n        liquidityQuoteArr.push({ liquidityQuote: lq });\n        //console.log(typeof(sampleArr[j].liquidity_quote))\n      }\n      \n      sevenDayArr.push(liquidityQuoteArr);\n      //console.log(sevenDayArr)\n\n      const vpc = (sevenDayArr[0][7].liquidityQuote === NaN ? 'NA' : Math.round(((sevenDayArr[0][7].liquidityQuote - sevenDayArr[0][6].liquidityQuote) * 100 / (sevenDayArr[0][6].liquidityQuote)+ Number.EPSILON)*100)/100)\n      finalArr.push({ \n        liquidityQuote: itemArr[i][0].total_liquidity_quote, \n        tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", \n        liquidityQuoteTS: sevenDayArr, \n        liquidityPercentChange : vpc\n       });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.liquidityPercentChange}%                  \n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex> \n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes} from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const LiqTTpools30d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=${API_KEY}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].liquidity_timeseries_30d;\n      var sevenDayArr = [];\n      var liquidityQuoteArr = [];\n      for (let j = 0; j < sampleArr.length; j++) {\n        liquidityQuoteArr.push({ liquidityQuote: sampleArr[j].liquidity_quote });\n      }\n      sevenDayArr.push(liquidityQuoteArr);\n\n      finalArr.push({ liquidityQuote: itemArr[i][0].total_liquidity_quote, tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", liquidityQuoteTS: sevenDayArr, liquidityPercentChange : Math.round(((sevenDayArr[0][29].liquidityQuote - sevenDayArr[0][0].liquidityQuote) * 100 / (sevenDayArr[0][0].liquidityQuote)+ Number.EPSILON)*100)/100 });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.liquidityPercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                  <LineChart width={50} height={50} data={i.liquidityQuoteTS[0]}>\n                    <Line type=\"monotone\" dataKey=\"liquidityQuote\" stroke={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                  </LineChart>\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex> \n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes} from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const LiqTTpools7d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=${API_KEY}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].liquidity_timeseries_7d;\n      var sevenDayArr = [];\n      var liquidityQuoteArr = [];\n      for (let j = 0; j < sampleArr.length; j++) {\n        liquidityQuoteArr.push({ liquidityQuote: sampleArr[j].liquidity_quote });\n      }\n      sevenDayArr.push(liquidityQuoteArr);\n\n      finalArr.push({ liquidityQuote: itemArr[i][0].total_liquidity_quote, tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", liquidityQuoteTS: sevenDayArr, liquidityPercentChange : Math.round(((sevenDayArr[0][7].liquidityQuote - sevenDayArr[0][0].liquidityQuote) * 100 / (sevenDayArr[0][0].liquidityQuote)+ Number.EPSILON)*100)/100 });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.liquidityPercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                    <LineChart width={50} height={50} data={i.liquidityQuoteTS[0]}>\n                      <Line type=\"monotone\" dataKey=\"liquidityQuote\" stroke={[i.liquidityPercentChange > 0 ? \"green\" : i.liquidityPercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                    </LineChart>\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex> \n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const VolTTpairs24h = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/tokens/widget/?key=${API_KEY}&sort-by=volume`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i].total_volume_timeseries_7d;\n      var sevenDayArr = [];\n      var volumePrecentArray = [];\n      var volumeQuoteArr = [];\n      for (let j = 0; j < 8; j++) {\n        volumeQuoteArr.push({ volumeQuote: typeof(sampleArr[j].total_volume_24h_quote !=='undefined') ? sampleArr[j].total_volume_24h_quote : NaN });\n      }\n      sevenDayArr.push(volumeQuoteArr);\n      const vpc = (sevenDayArr[0][7].volumeQuote === NaN ? 'NA' : Math.round(((sevenDayArr[0][7].volumeQuote - sevenDayArr[0][6].volumeQuote) * 100 / (sevenDayArr[0][6].volumeQuote)+ Number.EPSILON)*100)/100)\n\n      finalArr.push({\n        volume24hQuote: itemArr[i].total_volume_24h_quote, \n        tickerPair : itemArr[i].contract_ticker_symbol, \n        volumeQuoteTS: sevenDayArr, \n        volumePercentChange : vpc\n       });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.volumePercentChange}%\n                </Text>\n                <Box lignItems=\"center\" size = '50px' w=\"60px\">\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex>\n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const VolTTpairs30d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/tokens/widget/?key=${API_KEY}&sort-by=volume`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i].total_volume_timeseries_30d;\n      var thirtyDayArr = [];\n      var volumePrecentArray = [];\n      var volumeQuoteArr = [];\n      for (let j = 0; j < 30; j++) {\n        volumeQuoteArr.push({ volumeQuote: (typeof(sampleArr[j].total_volume_24h_quote!=='undefined')) ? sampleArr[j].total_volume_24h_quote : NaN });\n      }\n      thirtyDayArr.push(volumeQuoteArr);\n\n      const vpc = (thirtyDayArr[0][29].volumeQuote === NaN ? 'NA' : Math.round(((thirtyDayArr[0][29].volumeQuote - thirtyDayArr[0][0].volumeQuote) * 100 / (thirtyDayArr[0][0].volumeQuote)+ Number.EPSILON)*100)/100)\n\n      finalArr.push({volume24hQuote: itemArr[i].total_volume_24h_quote,\n         tickerPair : itemArr[i].contract_ticker_symbol,\n         volumeQuoteTS: thirtyDayArr, \n         volumePercentChange : vpc\n        });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n      <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.volumePercentChange}%\n                </Text>\n                <Box alignItems=\"center\"  size = '50px' w=\"60px\">\n                    <LineChart width={50} height={50} data={i.volumeQuoteTS[0]}>\n                        <Line type=\"monotone\" dataKey=\"volumeQuote\" stroke={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                    </LineChart>\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex>               \n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes} from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const VolTTpairs7d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/tokens/widget/?key=${API_KEY}&sort-by=volume`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i].total_volume_timeseries_7d;\n      var sevenDayArr = [];\n      var volumePrecentArray = [];\n      var volumeQuoteArr = [];\n      for (let j = 0; j < 8; j++) {\n        volumeQuoteArr.push({ volumeQuote: typeof(sampleArr[j].total_volume_24h_quote !=='undefined') ? sampleArr[j].total_volume_24h_quote : NaN });\n      }\n      sevenDayArr.push(volumeQuoteArr);\n      const vpc = (sevenDayArr[0][7].volumeQuote === NaN ? 'NA' :  Math.round(((sevenDayArr[0][7].volumeQuote - sevenDayArr[0][0].volumeQuote) * 100 / (sevenDayArr[0][0].volumeQuote)+ Number.EPSILON)*100)/100 )\n\n      finalArr.push({\n        volume24hQuote: itemArr[i].total_volume_24h_quote, \n        tickerPair : itemArr[i].contract_ticker_symbol, \n        volumeQuoteTS: sevenDayArr, \n        volumePercentChange : vpc\n      });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" >\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n\n                <Text\n                  color={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.volumePercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                  <LineChart width={50} height={50} data={i.volumeQuoteTS[0]}>\n                    <Line type=\"monotone\" dataKey=\"volumeQuote\" stroke={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                  </LineChart>\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n            </Flex> \n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const VolTTpools24h = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=${API_KEY}&sort-by=volume`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n    //console.log(itemArr)\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].volume_timeseries_7d;\n      //console.log(sampleArr)\n      var sevenDayArr = [];\n      var volumePrecentArray = [];\n      var volumeQuoteArr = [];\n      let x1= 8-sampleArr.length\n      for (let j = 0; j < 8; j++) {\n        //console.log(typeof(sampleArr[j].volume_quote))\n        volumeQuoteArr.push({ volumeQuote: (typeof(sampleArr[j].volume_quote!=='undefined')) ? sampleArr[j].volume_quote : NaN });\n      }\n      \n      //console.log(volumeQuoteArr)\n      sevenDayArr.push(volumeQuoteArr);\n      //console.log(sevenDayArr)\n      const vpc = (sevenDayArr[0][7].volumeQuote === NaN ? 'NA' : Math.round(((sevenDayArr[0][7].volumeQuote - sevenDayArr[0][6].volumeQuote) * 100 / (sevenDayArr[0][6].volumeQuote)+ Number.EPSILON)*100)/100)\n\n      finalArr.push({\n        volume24hQuote: itemArr[i][0].volume_24h_quote, \n        tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", \n        volumeQuoteTS: sevenDayArr, \n        volumePercentChange : vpc\n       });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nconsole.log(finalData);\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n                <Text\n                  color={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                > \n                  {i.volumePercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex>\n            </Box>\n            \n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const VolTTpools30d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 12s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=${API_KEY}&sort-by=volume`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n\n  // Function to traverse through the API data \n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].volume_timeseries_30d;\n      var thirtyDayArr = [];\n      var volumePrecentArray = [];\n      var volumeQuoteArr = [];\n      for (let j = 0; j < 30; j++) {\n        volumeQuoteArr.push({ volumeQuote: (typeof(sampleArr[j].volume_quote!=='undefined')) ? sampleArr[j].volume_quote : NaN });\n      }\n      thirtyDayArr.push(volumeQuoteArr);\n\n      const vpc = (thirtyDayArr[0][29].volumeQuote === NaN ? 'NA' : Math.round(((thirtyDayArr[0][29].volumeQuote - thirtyDayArr[0][0].volumeQuote) * 100 / (thirtyDayArr[0][0].volumeQuote)+ Number.EPSILON)*100)/100)\n\n      finalArr.push({ \n        volume30dQuote: itemArr[i][0].volume_30d_quote, \n        tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", \n        volumeQuoteTS: thirtyDayArr, \n        volumePercentChange : vpc\n      });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n      <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n                <Text\n                  color={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.volumePercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\" >\n                  <LineChart width={55} height={55} data={i.volumeQuoteTS[0]}>\n                    <Line type=\"monotone\" dataKey=\"volumeQuote\" stroke={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                  </LineChart>\n                </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n              </Flex> \n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line } from 'recharts';\nimport { Box, Flex, useColorModeValue, Text, Square, keyframes } from \"@chakra-ui/react\";\nimport Marquee from \"react-fast-marquee\";\n\nexport const VolTTpools7d = (props) => {\n  const [finalData, setFinalData] = useState([]);\n  const chainNameText = useColorModeValue(props.text_color ? props.text_color : \"#FFFFFF\", \"#FFFFFF\");\n  const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n  const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"#0c141c\", \"#0c141c\");\n  //const animation = `${move} 120s linear infinite`;\n  let blockchain_id = props.chain_id\n  let dex_name = props.dex_name\n  let API_KEY = props.api_key\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `https://api.covalenthq.com/v1/${blockchain_id}/xy=k/${dex_name}/pools/widget/?key=${API_KEY}&sort-by=volume`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        objTraversal(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  var finalArr = [];\n \n  // Function to traverse through the API data\n  function objTraversal(obj) {\n    var itemArr = obj.data.items;\n\n    for (let i = 0; i < itemArr.length; i++) {\n      var sampleArr = itemArr[i][0].volume_timeseries_7d;\n      var sevenDayArr = [];\n      var volumePrecentArray = [];\n      var volumeQuoteArr = [];\n      for (let j = 0; j < 8; j++) {\n        volumeQuoteArr.push({ volumeQuote: (typeof(sampleArr[j].volume_quote!=='undefined')) ? sampleArr[j].volume_quote : NaN });\n      }\n      sevenDayArr.push(volumeQuoteArr);\n      //console.log(sevenDayArr)\n      const vpc = (sevenDayArr[0][7].volumeQuote === NaN ? 'NA' : Math.round(((sevenDayArr[0][7].volumeQuote - sevenDayArr[0][0].volumeQuote) * 100 / (sevenDayArr[0][0].volumeQuote)+ Number.EPSILON)*100)/100)\n\n      finalArr.push({ \n        volume7dQuote: itemArr[i][0].volume_7d_quote, \n        tickerPair : itemArr[i][0].token_0.contract_ticker_symbol + \"-\" + itemArr[i][0].token_1.contract_ticker_symbol + \" \" +\"LP\", \n        volumeQuoteTS: sevenDayArr, \n        volumePercentChange :vpc\n      });\n      \n    }\n    setFinalData(finalArr);\n    }\n\nreturn (\n    <>\n    <Marquee pauseOnHover='true' speed='60' gradient='false'>\n        <Flex\n          borderRadius=\"xl\"\n          bg={BoxBgColor}\n          p={0.1}\n          w=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderColor={borderColor}\n          borderWidth={1}\n          mb={8}\n        >\n            {finalData.map((i) => (\n            <Box \n            w=\"300px\"\n            maxW=\"xs\"\n            mx=\"auto\"\n            px={2}\n            py={0.5}\n            bg={BoxBgColor}\n            shadow=\"md\"\n            >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\" color={chainNameText} px={10} fontFamily='Roboto'>\n                  {i.tickerPair}\n                </Text>\n                <Text\n                  color={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]}\n                  px={3}\n                  py={1}\n                  rounded=\"full\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                >\n                  {i.volumePercentChange}%\n                </Text>\n                <Box alignItems=\"center\" size = '50px' w=\"60px\">\n                    <LineChart width={50} height={50} data={i.volumeQuoteTS[0]}>\n                      <Line type=\"monotone\" dataKey=\"volumeQuote\" stroke={[i.volumePercentChange > 0 ? \"green\" : i.volumePercentChange < 0 ? \"red\" : \"yellow\"]} dot={false}/>\n                    </LineChart>\n                  </Box>\n                <Square bg='#cacacd' size='1.5px' height='40px' >\n                </Square>\n            </Flex>\n            </Box>\n            ))}\n        </Flex>\n      </Marquee>\n    </>\n  );\n};\n\n","import React, { useState } from \"react\";\nimport { Box, Flex, useColorModeValue,Select, Image, Spacer } from \"@chakra-ui/react\";\nimport { VolTTpools24h } from \"../VolTTpools24h/VolTTpools24h\";\nimport { VolTTpools7d } from \"../VolTTpools7d\";\nimport { VolTTpools30d } from \"../VolTTpools30d\";\nimport { VolTTpairs24h } from \"../VolTTpairs24h\";\nimport { VolTTpairs7d } from \"../VolTTpairs7d/VolTTpairs7d\";\nimport { VolTTpairs30d } from \"../VolTTpairs30d/VolTTpairs30d\";\nimport { LiqTTpools24h } from \"../LiqTTpools24h\";\nimport { LiqTTpools7d } from \"../LiqTTpools7d\";\nimport { LiqTTpools30d } from \"../LiqTTpools30d\";\nimport { LiqTTpairs24h } from \"../LiqTTpairs24h/LiqTTpairs24h\";\nimport { LiqTTpairs7d } from \"../LiqTTpairs7d/LiqTTpairs7d\";\nimport { LiqTTpairs30d } from \"../LiqTTpairs30d/LiqTTpairs30d\";\nimport Powered_by_Covalent_Light_Wide_Full from \"../../images/Powered_by_Covalent_Light_Wide_Full.png\";\n\n\nexport const Widget = (props) => {\n    const borderColor = useColorModeValue(\"#0c141c\", \"gray.600\");\n    const BoxBgColor = useColorModeValue(props.bg_color ? props.bg_color : \"blue\", \"#243036\");\n    const [volumeLiquidity, setVolumeLiquidity] = useState('vol');\n    const [tradingCategory, setTradingCategory] = useState('ttpools');\n    const [timeFrame, setTimeFrame] = useState('24h');\n\n        return (\n            <>                  \n          <Flex\n                bg={BoxBgColor}\n                w=\"full\"\n                borderColor={borderColor}\n          >\n              <Box >\n                  <Select\n                      placeholder=\"Select an option\"\n                      size='xs'\n                      variant='flushed'\n                      value={volumeLiquidity}\n                      width='100px'\n                      onChange={(e) => setVolumeLiquidity(e.target.value)}\n                      bgColor={BoxBgColor}\n                      borderColor={BoxBgColor}\n                      >\n                      <option value=\"vol\">Volume</option>\n                      <option value=\"liquidity\">Liquidity</option>\n                      \n                  </Select>\n              </Box>\n              <Spacer />\n              <Box >\n                  <Select\n                      placeholder=\"Select an option\"\n                      size='xs'\n                      variant='flushed'\n                      value={tradingCategory}\n                      onChange={(e) => setTradingCategory(e.target.value)}\n                      bgColor={BoxBgColor}\n                      borderColor={BoxBgColor}\n                      >\n                      <option value=\"ttpools\">Top trading pools</option>\n                      <option value=\"ttpairs\">Top tokens</option>\n                  </Select>\n              </Box>\n              <Spacer />\n              <Box >\n                  <Select\n                      placeholder=\"Select an option\"\n                      size='xs'\n                      variant='flushed'\n                      value={timeFrame}\n                      width='40px'\n                      onChange={(e) => setTimeFrame(e.target.value)}\n                      bgColor={BoxBgColor}\n                      borderColor={BoxBgColor}\n                      >\n                      <option value=\"24h\">24h</option>\n                      <option value=\"7d\">7d</option>\n                      {/*<option value=\"30d\">30d</option>*/}\n                  </Select>\n              </Box>\n              <Spacer />\n              <Box w='120px'>\n                <Image\n                borderRadius='full'\n                boxSize='30px'\n                w='120px'\n                objectFit='cover'\n                src={Powered_by_Covalent_Light_Wide_Full}\n                alt='Powered by Covalent'\n                />\n              </Box>\n          </Flex>            \n          {\n                (() => {\n                    if(volumeLiquidity==='vol' && tradingCategory==='ttpools' && timeFrame==='24h') {\n                        return (\n                            <VolTTpools24h\n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )\n                    } \n                    else if (volumeLiquidity==='vol' && tradingCategory==='ttpools' && timeFrame==='7d') {\n                        return (\n                            <VolTTpools7d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='vol' && tradingCategory==='ttpools' && timeFrame==='30d') {\n                        return (\n                            <VolTTpools30d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='vol' && tradingCategory==='ttpairs' && timeFrame==='24h') {\n                        return (\n                            <VolTTpairs24h \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='vol' && tradingCategory==='ttpairs' && timeFrame==='7d') {\n                        return (\n                            <VolTTpairs7d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='vol' && tradingCategory==='ttpairs' && timeFrame==='30d') {\n                        return (\n                            <VolTTpairs30d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='liquidity' && tradingCategory==='ttpools' && timeFrame==='24h') {\n                        return (\n                            <LiqTTpools24h \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='liquidity' && tradingCategory==='ttpools' && timeFrame==='7d') {\n                        return (\n                            <LiqTTpools7d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='liquidity' && tradingCategory==='ttpools' && timeFrame==='30d') {\n                        return (\n                            <LiqTTpools30d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='liquidity' && tradingCategory==='ttpairs' && timeFrame==='24h') {\n                        return (\n                            <LiqTTpairs24h \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='liquidity' && tradingCategory==='ttpairs' && timeFrame==='7d') {\n                        return (\n                            <LiqTTpairs7d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else if (volumeLiquidity==='liquidity' && tradingCategory==='ttpairs' && timeFrame==='30d') {\n                        return (\n                            <LiqTTpairs30d \n                            chain_id={props.chain_id}\n                            dex_name={props.dex_name}\n                            api_key={props.api_key}\n                            bg_color={props.bg_color}\n                            text_color={props.text_color}\n                            />\n                        )}\n                    else {\n                    return (\n                        <p>Oops! Something's wrong.</p>\n                    )\n                }\n                })()  \n            } \n\n          </>\n        );\n\n    }    \n\n  \n\n\n\n\n","var map = {\n\t\"./stories/Requirements.stories.js\": \"./src/stories/Requirements.stories.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";\nmodule.exports = webpackEmptyContext;","/* (ignored) */"],"names":[],"sourceRoot":""}